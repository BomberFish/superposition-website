---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
import Particles from "astro-particles";
import type {
  Container,
  Engine,
  ISourceOptions,
  tsParticles,
} from "tsparticles-engine";

const options: ISourceOptions = {
  particles: {
    number: {
      value: 80,
      density: {
        enable: true,
        value_area: 600,
      },
    },
    color: {
      value: "#775566",
    },
    shape: {
      type: "circle",
      stroke: {
        width: 3,
        color: "#997788",
      },
    },
    opacity: {
      value: 0.3,
      random: false,
      anim: {
        enable: true,
        speed: 1,
        opacity_min: 0.1,
        sync: false,
      },
    },
    size: {
      value: 3,
      random: true,
      anim: {
        enable: false,
        speed: 40,
        size_min: 0.1,
        sync: false,
      },
    },
    line_linked: {
      enable: true,
      distance: 150,
      color: "#ffffff",
      opacity: 0.3,
      width: 2,
    },
    move: {
      enable: true,
      speed: 4,
      direction: "none",
      random: true,
      straight: false,
      out_mode: "bounce",
      bounce: false,
      attract: {
        enable: true,
        rotateX: 600,
        rotateY: 1200,
      },
    },
  },
  interactivity: {
    detect_on: "window",
    events: {
      onhover: {
        enable: true,
        mode: "grab",
      },
      onclick: {
        enable: true,
        mode: "repulse",
      },
      resize: true,
    },
    modes: {
      grab: {
        distance: 200,
        line_linked: {
          opacity: 1,
        },
      },
      bubble: {
        distance: 400,
        size: 40,
        duration: 2,
        opacity: 8,
        speed: 3,
      },
      repulse: {
        distance: 150,
        duration: 0.4,
      },
      push: {
        particles_nb: 4,
      },
      remove: {
        particles_nb: 2,
      },
    },
  },
  retina_detect: true,
};
---

<script>
  import { type Container, type Engine, tsParticles } from "tsparticles-engine";
  import { loadFull } from "tsparticles";

  //old habits die hard.
  function print(message: any) {
    console.log(message);
  }

  // the function name is the parameter passed to the init attribute
  // required
  // add the function to window is mandatory, it will be searched there
  window.particlesInit = async function (engine: Engine) {
    await loadFull(engine);
    // lowerParticles();
  };

  // the function name is the parameter passed to the loaded attribute
  // optional
  // add the function to window is mandatory, it will be searched there
  window.particlesLoaded = function (container: Container) {
    console.log("particlesLoaded callback");
    // lowerParticles();
  };

//   function lowerParticles() {
//     if (document.getElementById("tsparticles") != null) {
//       print("lowering tsParticles");
//       let tsparticlesElement = document.getElementById("tsparticles");
//       let canvas = document.querySelector("#tsparticles > canvas");
//       tsparticlesElement.style.zIndex = "-1000";
//       canvas.style.zIndex = "-1000";
//     } else {
//       print("tsParticles has not loaded in yet");
//     }
//   }

//   document.addEventListener("DOMContentLoaded", () => {
//     lowerParticles();
//   });

//   document.getElementById("urlfield")?.addEventListener("click", () => {
//     lowerParticles();
//   });

//   document.querySelector("#tsparticles")?.addEventListener("click", () => {
//     lowerParticles();
//   });

  function redirect() {
    print("trolled")
  }

   document.onreadystatechange = onReady;
   function onReady() {
     if (document.readyState == "complete") {
       document.getElementById("tsparticles")?.setAttribute("data-astro-cid-j7pv25f6", "")
       document.getElementById("urlfield").style.paddingRight = "17rem";
       document.getElementById("urlfield").style.opacity = "1";
      //  document.getElementById("tsparticles").style.transform = "scale(1)"
      //  document.getElementById("tsparticles").style.opacity = "1"
     }
   }
  


</script>

<Layout title="Superposition">
  <main>
    <img src="/superposition.svg" width="210px" height="144px" style="margin-top: 1.85rem; margin-bottom: -1.25rem;"/>
    <h1><code>Superposition</code></h1>
    <h3>Proof-of-concept proxy using Cloudflare Workers.</h3>
    <h5>
      A <a href="https://bomberfish.ca">BomberFish Industries</a> project.
    </h5>
    <!-- <form onsubmit="
    window.location.href = 'https:\/\/superposition.bomberfish.ca/?url='+document.getElementById('urlfield').value;
    "> -->
      <input type="text" name="url" id="urlfield" placeholder="Enter a URL..." onfocus="document.getElementById('tsparticles').classList.add('blurred');console.log('blurred')" onblur="document.getElementById('tsparticles').classList.remove('blurred');console.log('unblurred')" />
      <button id="gobutton" name="go" onclick="redirect(document.getElementById('urlfield').value);">
        <img
        src="/paperplane.fill.svg"
        width="24px"
        height="24px"
        style="margin-top: -0.2rem; margin-bottom: -0.2rem; margin-left: -0.2rem; margin-right: -0.2rem;"
      />
      </button>
    <!-- </form> -->
    <small>URLs must start with http:// or https://</small>
  </main>
  <span id="particles">
  <Particles
    id="tsparticles"
    options={options}
    init="particlesInit"
    style="z-index: -1000"
  /></span>
</Layout>

<style>
  /* #tsparticles {
    opacity: 0;
    transform: scale(0.5);
  } */

  astro-particles,
  #tsparticles,
  #particles,
  #tsparticles > canvas {
    z-index: -1000 !important;
    backdrop-filter: brightness(0.5);
  }

  small {
    display:block;
    font-size: 0.9rem;
    margin-block: 0.4rem;
    color: #eecfdf
  }

  #tsparticles, #tsparticles.blurred {
	transition: all 0.7s cubic-bezier(0.4, 0, 0.2, 1)!important;
  }

  #tsparticles.blurred{
	filter: blur(8px) brightness(0.75) /*sepia(90%) hue-rotate(160deg)*/;
  }

  body {
	display: grid;
	align-items: center;
	justify-items: center;
  }

  a {
	color: rebeccapurple!important;
	filter: brightness(1.5)
  }

  main {
	align-self: center;
  	justify-self: center;
    z-index: 1000;
    margin: auto;
    padding: 1rem;
    width: 800px;
    max-width: calc(100% - 2rem);
    color: white;
    font-size: 20px;
    line-height: 1.6;
    text-align: center;
  }

  input,
  button {
    appearance: none;
    border: none;
    opacity: 1;
    padding: 0.7em;
    font-size: 24px;
    margin: 3px;
  }

  input,
  input:focus,
  input:active {
    font-family: ui-monospace, "SF Mono", Menlo, Monaco, "Cascadia Mono",
      "Segoe UI Mono", "Roboto Mono", "Oxygen Mono", "Ubuntu Mono",
      "Source Code Pro", "Fira Mono", "Droid Sans Mono", "Courier New",
      monospace;
    background: transparent;
    font-weight: 600;
    border-radius: 0;
    border-bottom: 2px solid gray;
    padding-right: -10em;
    opacity: 0;
	transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1)!important;
    margin-right: 0.9em;
	color: white;
  }

  input:focus,
  input:active {
    border-color: rebeccapurple;
  }

  button, button:hover {
	transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1)!important;
    appearance: none;
    border: none;
    border-radius: 0.5em;
    width: 2.5em;
    background: rebeccapurple;
    height: 2.5em;
  }

  button:hover {
	background: #7739b5;
	box-shadow: 0px 0px 69px 18px rgba(102,51,153,1);
-webkit-box-shadow: 0px 0px 69px 18px rgba(102,51,153,1);
-moz-box-shadow: 0px 0px 69px 18px rgba(102,51,153,1);
  }

  #go-button > svg,
  #go-button > svg > g,
  #go-button > svg > g > path {
    width: 1em;
    height: 1em;
    scale: 0.5 !important;
  }

  .astro-a {
    position: absolute;
    top: -32px;
    left: 50%;
    transform: translatex(-50%);
    width: 220px;
    height: auto;
    /* z-index: -1; */
  }
  h1 {
    font-size: 4rem;
    font-weight: 700;
    line-height: 1;
    text-align: center;
    margin-bottom: 0.3em;
  }
</style>
